version: '3.8'

services:
  # Development Hospital Management App
  hospital-app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - hospital-dev-network
    restart: unless-stopped

  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: hospital_dev_db
      POSTGRES_USER: hospital_dev_user
      POSTGRES_PASSWORD: hospital_dev_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hospital-dev-network
    restart: unless-stopped

  # Redis for Development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - hospital-dev-network
    restart: unless-stopped

  # Adminer for Database Management
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres-dev
    networks:
      - hospital-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  hospital-dev-network:
    driver: bridge